{"version":3,"sources":["cryptomonedas.png","components/Error.js","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f575ed6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MensajeError = styled.p`\r\n    background-color: #b7322c;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    font-family: \"Bebas Neue\", cursive;\r\n`;\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n\r\n        <MensajeError>{mensaje}</MensajeError>\r\n\r\n     );\r\n}\r\n\r\nError.propTypes = {\r\n    resultado: PropTypes.string.isRequired \r\n}\r\n \r\nexport default Error;","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n    font-family: \"Bebas Neue\", cursive;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    //State de nuestro custom hook\r\n    const [ state, actualizarState ] = useState(stateInicial);\r\n\r\n    const Seleccionar = () => (\r\n        <>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={ e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\">- Seleccione -</option>\r\n                {opciones.map(opcion => (\r\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n    //Retornar state, interfaz y función que modifica el state\r\n    return [ state, Seleccionar, actualizarState ]\r\n\r\n}\r\n\r\nexport default useMoneda;","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n    font-family: \"Bebas Neue\", cursive;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`\r\n\r\nconst useCriptomoneda = (label, stateInicial, opciones) => {\r\n\r\n    //console.log(opciones);\r\n\r\n    //State de nuestro custom hook\r\n    const [ state, actualizarState ] = useState(stateInicial);\r\n    \r\n\r\n    const SelectCripto = () => (\r\n        <>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={ e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\">- Seleccione -</option>\r\n                {opciones.map(opcion => (\r\n                    <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n    //Retornar state, interfaz y función que modifica el state\r\n    return [ state, SelectCripto, actualizarState ];\r\n\r\n}\r\n\r\nexport default useCriptomoneda;","import React, { useEffect, useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Error from \"./Error\";\r\nimport useMoneda from \"../hooks/useMoneda\";\r\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\r\nimport axios from 'axios';\r\n\r\nconst Boton = styled.input`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    background-color: #66a2fe;\r\n    border: none;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n    color: #fff;\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover {\r\n        background-color: #326AC0;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\r\n\r\n    //State del listado de criptomonedas\r\n    const [ listacripto, guardarCriptomonedas ] = useState([]);\r\n    const [ error, guardarError ] = useState(false);\r\n\r\n    const MONEDAS = [\r\n        { codigo: \"USD\", nombre: \"Dolar de Estados Unidos\"},\r\n        { codigo: \"EUR\", nombre: \"Euro\"},\r\n        { codigo: \"GBP\", nombre: \"Libra Esterlina\"},\r\n        { codigo: \"ARS\", nombre: \"Peso Argentino\"},\r\n        { codigo: \"MXN\", nombre: \"Peso Mexicano\"}\r\n    ]\r\n\r\n    //Utilizar useMoneda\r\n    const [ moneda, SelectMonedas ] = useMoneda(\"Elige tu moneda \", \"\", MONEDAS);\r\n\r\n    //Utilizar useCriptomoneda\r\n    const [ criptomoneda, SelectCripto ] = useCriptomoneda(\"Elige tu Criptomoneda\", \"\", listacripto);\r\n\r\n    //Ejecutar llamado a la API\r\n    useEffect(() => {\r\n        const consultarAPI = async () => {\r\n            const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\r\n\r\n            const resultado = await axios.get(url);\r\n\r\n            guardarCriptomonedas(resultado.data.Data);\r\n        }\r\n        consultarAPI();\r\n    }, []);\r\n\r\n\r\n    //Cuando el usuario hace submit\r\n    const cotizarMoneda = e => {\r\n        e.preventDefault();\r\n\r\n        //validar que cambios estén llenos\r\n        if(moneda === \"\" || criptomoneda === \"\") {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // pasar los datos al componente principal\r\n        guardarError(false);\r\n        guardarMoneda(moneda);\r\n        guardarCriptomoneda(criptomoneda);\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={cotizarMoneda}\r\n        >\r\n            {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\r\n\r\n            <SelectMonedas />\r\n\r\n            <SelectCripto />\r\n\r\n            <Boton \r\n                type=\"submit\"\r\n                value=\"Calcular\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarMoneda: PropTypes.func.isRequired, \r\n    guardarCriptomoneda: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ResultadoDiv = styled.div`\r\n    color: #fff;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n    font-size: 18px;\r\n\r\n    span {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n    font-size: 30px;\r\n\r\n    span {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Cotizacion = ({resultado}) => {\r\n\r\n    if(Object.keys(resultado).length === 0) return null;\r\n    \r\n    //console.log(resultado);\r\n\r\n    return ( \r\n        <ResultadoDiv>\r\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\r\n            <Info>Precio más alto del día: <span>{resultado.HIGHDAY}</span></Info>\r\n            <Info>Precio más bajo del día: <span>{resultado.LOWDAY}</span></Info>\r\n            <Info>Variación últimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span></Info>\r\n            <Info>Última Actualización: <span>{resultado.LASTUPDATE}</span></Info>\r\n        </ResultadoDiv>\r\n     );\r\n}\r\n\r\nCotizacion.propTypes = {\r\n    resultado: PropTypes.object.isRequired \r\n}\r\n \r\nexport default Cotizacion;","import React from 'react';\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n\r\n     );\r\n}\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport imagen from \"./cryptomonedas.png\";\nimport Formulario from \"./components/Formulario\";\nimport Cotizacion from \"./components/Cotizacion\";\nimport Spinner from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #FFF;\n  text-align: left;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display: block;\n  }\n`;\n\nfunction App() {\n\n  const [ moneda, guardarMoneda ] = useState(\"\");\n  const [ criptomoneda, guardarCriptomoneda ] = useState(\"\");\n  const [ resultado, guardarResultado ] = useState({});\n  const [ cargando, guardarCargando ] = useState(false);\n\n  useEffect(() => {\n    \n    const cotizarCriptomoneda = async () => {\n          //evitamos la ejecución la primera vez\n          if(moneda === \"\") return;\n\n          //consultar la api para obtener la cotización\n          const url= `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n          const resultado = await axios.get(url);\n\n          //monstrar el spinner\n          guardarCargando(true);\n\n          //ocultar el spinner y monstrar el resultado\n          setTimeout(() => {\n            //Cambiar el estado de cargando\n            guardarCargando(false);\n\n            //guardar cotización\n            guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n          }, 3000);\n          \n    }\n    cotizarCriptomoneda();\n\n  }, [moneda, criptomoneda]);\n\n  //Mostrar spinner o resultado\n  const componente = (cargando) ? <Spinner /> : <Cotizacion resultado={resultado} />\n\n  return (\n    <Contenedor>\n        <div>\n            <Imagen \n                src={imagen}\n                alt=\"imagen cripto\"\n            />\n        </div>\n        <div>\n            <Heading>Cotiza Criptomonedas al Instante</Heading>\n\n            <Formulario \n              guardarMoneda={guardarMoneda}\n              guardarCriptomoneda={guardarCriptomoneda}\n            />\n\n            {componente}\n        </div>\n    </Contenedor>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}